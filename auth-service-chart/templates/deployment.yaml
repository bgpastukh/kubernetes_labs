apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "auth-service-chart.fullname" . }}
  labels:
    {{- include "auth-service-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "auth-service-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-map.yaml") . | sha256sum }}
    {{- end }}
      labels:
        {{- include "auth-service-chart.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: shared-files
          emptyDir: {}

        - name: nginx-config-volume
          configMap:
            name: nginx-config
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/html

          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "cp -r /app/. /var/www/html && php /var/www/html/bin/console cache:wa"]
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: DATABASE_URL
            - name: APP_ENV
              value: "prod"
        - image: nginx:1.7.9
          name: nginx
          ports:
            - name: web
              containerPort: 80
          volumeMounts:
            - name: shared-files
              mountPath: /var/www/html
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          livenessProbe:
            httpGet:
              path: /health
              port: web
          readinessProbe:
            httpGet:
              path: /health
              port: web
